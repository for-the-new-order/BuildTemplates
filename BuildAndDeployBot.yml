parameters:
    - name: bot
      type: object
    - name: buildNumber
      type: string

jobs:
    - job: ValidateParameters
      displayName: Validate parameters
      steps:
          - template: RequiredValue.yml
            parameters:
                name: 'bot.image'
                value: ${{ parameters.bot.image }}
          - template: RequiredValue.yml
            parameters:
                name: 'bot.imageName'
                value: ${{ parameters.bot.imageName }}
          - template: RequiredValue.yml
            parameters:
                name: 'bot.sshEndpoint'
                value: ${{ parameters.bot.sshEndpoint }}
          - template: RequiredValue.yml
            parameters:
                name: 'bot.dockerRegistryEndpoint'
                value: ${{ parameters.bot.dockerRegistryEndpoint }}
          - template: RequiredValue.yml
            parameters:
                name: 'bot.envFile'
                value: ${{ parameters.bot.envFile }}
          - template: RequiredValue.yml
            parameters:
                name: 'bot.envFile'
                value: ${{ parameters.buildNumber }}

    - job: Build
      condition: eq(true, false)
      displayName: Build Image
      dependsOn: ValidateParameters
      steps:
          - bash: |
                PACKAGE_VERSION=$(grep '"version":' package.json | cut -d\" -f4)
                echo "##vso[build.updatebuildnumber]$PACKAGE_VERSION"
            displayName: 'Update Build Number'

          - task: Docker@1
            displayName: 'Build an image'
            inputs:
                containerregistrytype: 'Container Registry'
                dockerRegistryEndpoint: ${{ parameters.bot.dockerRegistryEndpoint }}
                imageName: '${{ parameters.bot.image }}:${{ parameters.buildNumber }}'
            enabled: true

          - task: Docker@1
            displayName: 'Push an image'
            inputs:
                containerregistrytype: 'Container Registry'
                dockerRegistryEndpoint: ${{ parameters.bot.dockerRegistryEndpoint }}
                command: 'Push an image'
                imageName: '${{ parameters.bot.image }}:${{ parameters.buildNumber }}'
            enabled: true
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
